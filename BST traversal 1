#include <stdio.h>  
#define MAX_SIZE 20001


int bst[MAX_SIZE];  

void initialize_bst() {  
    for (int i = 0; i < MAX_SIZE; i++)  
        bst[i] = -1;  
}  
 
void insert(int index, int value) {  
    if (index >= MAX_SIZE) {  
        return;  
    }  
    if (bst[index] == -1) {  
        bst[index] = value;  
        return;  
    }   
    if (value < bst[index]) {  
        insert(2 * index + 1, value);  
    } else {  
        insert(2 * index + 2, value);  
    }  
}  

 
void preorder(int index) {  
    if (index >= MAX_SIZE || bst[index] == -1)  
        return;  
    printf("%d ", bst[index]);  
    preorder(2 * index + 1);  
    preorder(2 * index + 2);  
}  

void inorder(int index) {  
    if (index >= MAX_SIZE || bst[index] == -1)  
        return;  
    inorder(2 * index + 1);  
    printf("%d ", bst[index]);  
    inorder(2 * index + 2);  
}  
  
void postorder(int index) {  
    if (index >= MAX_SIZE || bst[index] == -1)  
        return;  
    postorder(2 * index + 1);  
    postorder(2 * index + 2);  
    printf("%d ", bst[index]);  
}  

int main() {  
    int N, value;  

    initialize_bst();   
    scanf("%d", &N);  
    if (N < 1 || N > 100) {  
        printf("Invalid N!\n");  
        return 1;  
    }  

    for (int i = 0; i < N; i++) {  
        scanf("%d", &value);  
        insert(0, value);  
    }  


    preorder(0);  
    printf("\n");  
    inorder(0);  
    printf("\n");    
    postorder(0);  
    printf("\n");  

    return 0;  
}  
